name: Deploy to GitHub Pages

on:
  # Trigger on WordPress webhook
  repository_dispatch:
    types: [wordpress_webhook]
  # Trigger on push to main branch
  push:
    branches: [ main ]
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Optimize build environment
        run: chmod +x ./.github/workflows/build-optimization.sh && ./.github/workflows/build-optimization.sh

      - name: Build Astro site
        run: npm run build
        env:
          WORDPRESS_URL: ${{ secrets.WORDPRESS_URL }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.build.result }}" = "success" ] && [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "✅ Deployment successful! Site updated with latest WordPress content."
          elif [ "${{ needs.build.result }}" = "failure" ]; then
            echo "❌ Build failed. Check WordPress connection and build logs."
          else
            echo "⚠️ Deployment completed with issues. Check deployment logs."
          fi
