---
export interface Props {
  slug: string;
}

const { slug } = Astro.props;

interface Post {
  id: string;
  slug: string;
  permalink: string;
  publishDate: Date;
  updateDate: Date;
  title: string;
  excerpt: string;
  image: string;
  category: { slug: string; title: string; };
  tags: { slug: string; title: string; }[];
  author: string;
  draft: boolean;
  metadata: any;
  content: string;
  readingTime: undefined;
}

// Fetch the specific post server-side
let post: Post | null = null;
let relatedPosts: Post[] = [];
try {
  const { fetchWordPressPosts, convertWordPressPostToPost } = await import('~/lib/wordpress');

  const wpPosts = await fetchWordPressPosts({
    slug
  });

  if (wpPosts.length > 0) {
    post = convertWordPressPostToPost(wpPosts[0]);

    // Fetch related posts (exclude current post)
    const allWpPosts = await fetchWordPressPosts({
      per_page: 4
    });

    const allPosts: Post[] = allWpPosts
      .map(wpPost => convertWordPressPostToPost(wpPost))
      .filter(p => !p.draft && p.slug !== slug);

    relatedPosts = allPosts.slice(0, 3);
  }
} catch (error) {
  console.error('Error fetching blog post:', error);
}

// Basic metadata - will be enhanced when we have post data
const title = post ? post.title : 'Inlägg hittades inte: ' + slug;
const description = post ? 'Läs denna artikel om fysioterapi och rehabilitering.' : 'I bloggen delar jag praktiska råd, övningar och fördjupningar om vanliga besvär i rygg, nacke, axlar, knän och fötter.';
---

<section class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  {post ? (
    <article>
      <header class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">{post.title}</h1>

        {post.publishDate && (
          <div class="text-sm text-gray-500 mb-4">
            <time datetime={post.publishDate.toISOString()}>
              {post.publishDate.toLocaleDateString('sv-SE', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
          </div>
        )}
      </header>

      {post.image && post.image !== '~/assets/images/default.png' && (
        <img
          src={post.image}
          alt={post.title}
          class="w-full h-64 object-cover rounded-lg mb-6"
        />
      )}

      <div class="prose prose-lg max-w-none mb-12">
        {post.content}
      </div>

      {post.tags && post.tags.length > 0 && (
        <footer class="border-t pt-6">
          <h3 class="text-sm font-medium text-gray-500 uppercase tracking-wide mb-4">Kategorier</h3>
          <div class="flex flex-wrap gap-2">
            {post.tags.map((tag) => (
              <span
                class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800"
              >
                {tag.title}
              </span>
            ))}
          </div>
        </footer>
      )}
    </article>
  ) : (
    <article>
      <div class="text-center py-12">
        <h1 class="text-3xl font-bold text-gray-900 mb-4">Inlägg hittades inte</h1>
        <p class="text-gray-600 mb-6">
          Det efterfrågade blogginlägget "{slug}" kunde inte hittas.
        </p>
        <a href="/blogg" class="text-blue-600 hover:text-blue-800 font-medium">
          Tillbaka till bloggen →
        </a>
      </div>
    </article>
  )}

  {relatedPosts.length > 0 && (
    <section class="mt-16 pt-8 border-t">
      <h2 class="text-2xl font-bold text-gray-900 mb-8">Liknande inlägg</h2>
      <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {relatedPosts.map((relatedPost) => (
          <article class="bg-white rounded-lg shadow-md overflow-hidden">
            {relatedPost.image && relatedPost.image !== '~/assets/images/default.png' && (
              <img
                src={relatedPost.image}
                alt={relatedPost.title}
                class="w-full h-32 object-cover"
              />
            )}
            <div class="p-4">
              <h3 class="text-lg font-semibold text-gray-900 mb-2">
                <a href={`/blogg/${relatedPost.slug}`} class="hover:text-blue-600">
                  {relatedPost.title}
                </a>
              </h3>
              <p class="text-gray-600 text-sm mb-3 line-clamp-2">
                {relatedPost.excerpt?.replace(/<[^>]*>/g, '').substring(0, 100)}...
              </p>
              <a
                href={`/blogg/${relatedPost.slug}`}
                class="text-blue-600 hover:text-blue-800 text-sm font-medium"
              >
                Läs mer →
              </a>
            </div>
          </article>
        ))}
      </div>
    </section>
  )}
</section>
